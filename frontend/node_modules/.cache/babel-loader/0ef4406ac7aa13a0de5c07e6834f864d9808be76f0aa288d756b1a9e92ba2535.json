{"ast":null,"code":"import \"core-js/modules/es.array.index-of.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport ItemCours from '../../elements/ItemCours.vue';\nimport TopProf from '../../elements/TopProf.vue';\nimport axios from 'axios';\nimport Cookies from 'js-cookie';\nexport default {\n  components: {\n    ItemCours: ItemCours,\n    TopProf: TopProf\n  },\n  data: function data() {\n    return {\n      courses: [],\n      matricule: '',\n      showModal: false,\n      availableCourses: [],\n      modalIsOpen: false\n    };\n  },\n  methods: {\n    showDetailsHandler: function showDetailsHandler(courseName) {\n      // Enregistrer le nom du cours dans les cookies\n      Cookies.set('selectedCourse', courseName);\n      // Rediriger vers la page DetailsCours\n      this.$router.push({\n        name: 'DetailsCours'\n      });\n    },\n    hideDetail: function hideDetail() {\n      // Méthode pour cacher la fenêtre modale de détails\n      this.showDetailModal = false;\n    },\n    addCourse: function addCourse(cours) {\n      var _this = this;\n      var id = Cookies.get('matriculeProfesseur');\n      var coursName = cours;\n      axios.post(\"http://localhost:1937/assign-course\".concat(id), null, {\n        params: {\n          coursName: coursName\n        }\n      }).then(function (response) {\n        var result = response.data;\n        // Gérer la réponse de la méthode attributeCourse\n        if (result === 'attribute success') {\n          // Le cours a été attribué avec succès au professeur\n          // Mettre à jour la liste des cours\n          _this.getCourses();\n          // Fermer la fenêtre de sélection des cours\n          _this.hideCourseSelection();\n          alert(\"attribute success\");\n        } else {\n          // Gérer les autres cas de retour de la méthode attributeCourse\n        }\n      })[\"catch\"](function (error) {\n        console.error(error);\n        // Gérer les erreurs de requête\n      });\n    },\n    extractNumberBeforeAt: function extractNumberBeforeAt(email) {\n      var atIndex = email.indexOf('@');\n      if (atIndex !== -1) {\n        var number = email.substring(0, atIndex);\n        return number;\n      } else {\n        return null;\n      }\n    },\n    getCourses: function getCourses() {\n      var _this2 = this;\n      var email = Cookies.get('emailProfesseur');\n      var password = Cookies.get('passwordProfesseur');\n      if (!email || !password) {\n        // Gérer le cas où les cookies ne sont pas présents\n        return;\n      }\n      var login = {\n        email: email,\n        password: password\n      };\n      console.log(\"email :  \" + login.email);\n      this.matricule = this.extractNumberBeforeAt(login.email);\n      Cookies.set('matriculeProfesseur', this.matricule);\n      axios.post(\"http://localhost:1937/teachers/getCourses\", login).then(function (response) {\n        var courses = response.data;\n        _this2.courses = courses;\n      })[\"catch\"](function (error) {\n        console.error(error);\n        // Gérer les erreurs de requête\n      });\n    },\n    showCourseSelection: function showCourseSelection() {\n      var _this3 = this;\n      axios.get('http://localhost:1937/cours/AllCours').then(function (response) {\n        var courses = response.data;\n        _this3.availableCourses = courses.map(function (cours) {\n          return cours.name;\n        });\n        _this3.modalIsOpen = true;\n      })[\"catch\"](function (error) {\n        console.error(error);\n        // Gérer les erreurs de requête\n      });\n    },\n    hideCourseSelection: function hideCourseSelection() {\n      this.modalIsOpen = false;\n    }\n  },\n  created: function created() {\n    this.getCourses();\n  }\n};","map":{"version":3,"names":["ItemCours","TopProf","axios","Cookies","components","data","courses","matricule","showModal","availableCourses","modalIsOpen","methods","showDetailsHandler","courseName","set","$router","push","name","hideDetail","showDetailModal","addCourse","cours","_this","id","get","coursName","post","concat","params","then","response","result","getCourses","hideCourseSelection","alert","error","console","extractNumberBeforeAt","email","atIndex","indexOf","number","substring","_this2","password","login","log","showCourseSelection","_this3","map","created"],"sources":["/home/koluyantrez/Documents/bac3/gl/Projet-developpement-logiciel-2024-main/src/main/java/com/genieLogiciel/Umons/frontend/src/components/everyone/HomeProf.vue"],"sourcesContent":["<template>\n  <div>\n    <TopProf/>\n    <div class=\"container\">\n      <div class=\"add\">\n        <button @click=\"showCourseSelection\">Ajouter un cours</button>\n      </div>\n      <div class=\"place\" :style=\"{pointerEvents: modalIsOpen ? 'none' : 'auto'}\">\n        <ItemCours v-for=\"(cours, index) in courses\" :word=\"cours\" :key=\"index\" :role=\"role\" :get-courses=\"getCourses\" @show-details=\"showDetailsHandler\" />\n      </div>\n    </div>\n\n    <!-- Fenêtre modale de sélection des cours -->\n    <div v-if=\"modalIsOpen\" class=\"modal\">\n      <!-- Contenu de la fenêtre de sélection des cours -->\n      <div class=\"modal-content\">\n        <h2 class=\"modal-title\">Sélection des cours</h2>\n        <div class=\"course-list\">\n          <ul class=\"course-scroll\">\n            <li v-for=\"(cours, index) in availableCourses\" :key=\"index\" class=\"course-item\">\n              {{ cours }}\n              <button @click=\"addCourse(cours)\" class=\"button-ajouter\" id=\"buttonAjouter\">Ajouter</button>\n            </li>\n          </ul>\n        </div>\n        <button @click=\"hideCourseSelection\">Fermer</button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport ItemCours from '../../elements/ItemCours.vue';\nimport TopProf from '../../elements/TopProf.vue';\nimport axios from 'axios';\nimport Cookies from 'js-cookie';\n\nexport default {\n  components: { ItemCours, TopProf },\n  data() {\n    return {\n      courses: [],\n      matricule: '',\n      showModal: false,\n      availableCourses: [],\n      modalIsOpen: false,\n    };\n  },\n  methods: {\n    showDetailsHandler(courseName) {\n      // Enregistrer le nom du cours dans les cookies\n      Cookies.set('selectedCourse', courseName);\n      // Rediriger vers la page DetailsCours\n      this.$router.push({ name: 'DetailsCours' });\n    },\n    hideDetail() {\n      // Méthode pour cacher la fenêtre modale de détails\n      this.showDetailModal = false;\n    },\n    addCourse(cours) {\n      const id = Cookies.get('matriculeProfesseur');\n      const coursName = cours;\n\n      axios.post(`http://localhost:1937/assign-course${id}`, null, {\n        params: {\n          coursName: coursName\n        }\n      })\n          .then(response => {\n            const result = response.data;\n            // Gérer la réponse de la méthode attributeCourse\n            if (result === 'attribute success') {\n              // Le cours a été attribué avec succès au professeur\n              // Mettre à jour la liste des cours\n              this.getCourses();\n              // Fermer la fenêtre de sélection des cours\n              this.hideCourseSelection();\n              alert(\"attribute success\");\n            } else {\n              // Gérer les autres cas de retour de la méthode attributeCourse\n            }\n          })\n          .catch(error => {\n            console.error(error);\n            // Gérer les erreurs de requête\n          });\n    },\n    extractNumberBeforeAt(email) {\n      const atIndex = email.indexOf('@');\n      if (atIndex !== -1) {\n        const number = email.substring(0, atIndex);\n        return number;\n      } else {\n        return null;\n      }\n    },\n    getCourses() {\n      const email = Cookies.get('emailProfesseur');\n      const password = Cookies.get('passwordProfesseur');\n      if (!email || !password) {\n        // Gérer le cas où les cookies ne sont pas présents\n        return;\n      }\n      const login = {\n        email: email,\n        password: password\n      };\n      console.log(\"email :  \" + login.email);\n      this.matricule = this.extractNumberBeforeAt(login.email);\n      Cookies.set('matriculeProfesseur', this.matricule);\n      axios.post(`http://localhost:1937/teachers/getCourses`, login)\n          .then(response => {\n            const courses = response.data;\n            this.courses = courses;\n          })\n          .catch(error => {\n            console.error(error);\n            // Gérer les erreurs de requête\n          });\n    },\n    showCourseSelection() {\n      axios.get('http://localhost:1937/cours/AllCours')\n          .then(response => {\n            const courses = response.data;\n            this.availableCourses = courses.map(cours => cours.name);\n            this.modalIsOpen = true;\n          })\n          .catch(error => {\n            console.error(error);\n            // Gérer les erreurs de requête\n          });\n    },\n    hideCourseSelection() {\n      this.modalIsOpen = false;\n    },\n  },\n  created() {\n    this.getCourses();\n  }\n}\n</script>\n\n<style scoped>\n.container {\n  position: absolute;\n  width: 100%;\n  height: 89%;\n  top: 100px;\n  overflow: auto;\n}\n\n.place {\n  position: absolute;\n  top: 5%;\n  left: 10%;\n}\n\n.add {\n  position: relative;\n  top: 0;\n  left: 0;\n  margin-bottom: 20px;\n}\n\n.add button {\n  font-size: 18px;\n  padding: 10px 20px;\n  background-color: #4CAF50;\n  color: white;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n}\n\n.add button:hover {\n  background-color: #45a049;\n}\n\n.modal {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.modal h2 {\n  color: white;\n}\n\n.modal ul {\n  list-style-type: none;\n  padding: 0;\n  margin: 0;\n  color: white;\n}\n\n#buttonAjouter {\n  padding: 10px 10px;\n  font-size: 15px;\n  border-radius: 20px;\n  color: white;\n  cursor: pointer;\n  background-color: white;\n  color: black;\n  border: solid black 2px;\n\n}\n\n#buttonAjouter:hover {\n  background-color: green;\n}\n\n.small {\n  background-color: green;\n  font-size: 12px;\n}\n\n.medium {\n  background-color: orange;\n  font-size: 14px;\n}\n\n.large {\n  background-color: red;\n  font-size: 16px;\n}\n\n.modal button {\n  font-size: 18px;\n  padding: 10px 20px;\n  background-color: #4CAF50;\n  color: white;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n}\n\n.modal button:hover {\n  background-color: #45a049;\n}\n\n.course-item {\n  list-style-type: disc;\n  font-size: 20px;\n}\n\n.modal-title {\n  font-size: 30px;\n  transform: translateX(-100px);\n}\n\n.course-item {\n  list-style-type: disc;\n  font-size: 20px;\n}\n\n.course-list {\n  max-height: 300px; /* Hauteur maximale de la liste des cours */\n  overflow-y: auto; /* Activation du défilement vertical */\n}\n\n.course-scroll {\n  padding: 0;\n  margin: 0;\n  color: white;\n  overflow: hidden; /* Masquer le contenu qui dépasse */\n}\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}