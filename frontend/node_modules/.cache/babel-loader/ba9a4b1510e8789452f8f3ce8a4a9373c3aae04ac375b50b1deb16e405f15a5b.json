{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport Cookies from 'js-cookie';\nimport Swal from 'sweetalert2'; // Importation de SweetAlert2\nimport axios from 'axios';\nexport default {\n  props: ['word', 'getCourses'],\n  methods: {\n    redirectToSection: function redirectToSection() {\n      // Enregistrer le nom du cours dans les cookies\n      Cookies.set('selectedCourse', this.word);\n      // Rediriger vers la page de section\n      this.$router.push({\n        name: 'courseSection'\n      });\n    },\n    isProfessorRole: function isProfessorRole() {\n      var role = Cookies.get('role');\n      return role === 'professeur';\n    },\n    showDeleteConfirmation: function showDeleteConfirmation() {\n      var _this = this;\n      Swal.fire({\n        title: 'Êtes-vous sûr de vouloir supprimer ce cours ?',\n        text: \"Cette action est irréversible.\",\n        icon: 'warning',\n        showCancelButton: true,\n        confirmButtonColor: '#3085d6',\n        cancelButtonColor: '#d33',\n        confirmButtonText: 'Oui, supprimer',\n        cancelButtonText: 'Annuler'\n      }).then(function (result) {\n        if (result.isConfirmed) {\n          _this.deleteCourse();\n        }\n      });\n    },\n    deleteCourse: function deleteCourse() {\n      var _this2 = this;\n      if (this.isProfessorRole()) {\n        // Récupérer le nom du cours à supprimer\n        var courseName = this.word;\n\n        // Envoyer une requête DELETE à votre backend\n        axios[\"delete\"](\"http://localhost:1937/teachers/deleteCoursFromProf?coursName=\".concat(courseName)).then(function (response) {\n          // Gérer la réponse du backend\n          console.log(response.data);\n          // Mettre à jour la liste des cours en appelant la méthode getCourses\n          _this2.getCourses(); // Appel de la méthode getCourses passée en prop\n        })[\"catch\"](function (error) {\n          // Gérer les erreurs de requête\n          console.error(error);\n        });\n      } else {\n        // Gérer le cas où l'utilisateur n'a pas les autorisations nécessaires\n        console.log(\"Vous n'êtes pas autorisé à supprimer le cours.\");\n      }\n    },\n    showDetails: function showDetails() {\n      // Émettre un événement pour signaler que le bouton \"Détails\" a été cliqué\n      this.$emit('show-details', this.word);\n    },\n    redirectToDetails: function redirectToDetails() {\n      // Enregistrer le nom du cours dans les cookies\n      Cookies.set('selectedCourse', this.word);\n      // Rediriger vers la page \"DetailsCourse\"\n      this.$router.push({\n        name: 'DetailsCourse'\n      });\n    }\n  }\n};","map":{"version":3,"names":["Cookies","Swal","axios","props","methods","redirectToSection","set","word","$router","push","name","isProfessorRole","role","get","showDeleteConfirmation","_this","fire","title","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","cancelButtonText","then","result","isConfirmed","deleteCourse","_this2","courseName","concat","response","console","log","data","getCourses","error","showDetails","$emit","redirectToDetails"],"sources":["/home/koluyantrez/Documents/bac3/gl/Projet-developpement-logiciel-2024-main/src/main/java/com/genieLogiciel/Umons/frontend/src/elements/ItemCours.vue"],"sourcesContent":["<template>\n  <center>\n    <div>\n      <router-link :to=\"{ name: 'courseSection', params: { cours: word } }\">\n        <button class=\"button\">{{ word }}</button>\n      </router-link>\n      <!-- Ajouter une condition pour afficher le bouton de suppression uniquement si le rôle est \"professeur\" -->\n      <button v-if=\"isProfessorRole()\" class=\"delete-button\" @click=\"showDeleteConfirmation\">Supprimer</button>\n      <!-- Ajouter une condition pour afficher le bouton \"Supprimer\" uniquement si le rôle est \"professeur\" -->\n      <button class=\"details-button\" @click=\"showDetails\">Détails</button>\n    </div>\n  </center>\n</template>\n\n<script>\nimport Cookies from 'js-cookie';\nimport Swal from 'sweetalert2'; // Importation de SweetAlert2\nimport axios from 'axios';\n\nexport default {\n  props: ['word', 'getCourses'],\n  methods: {\n\n    redirectToSection() {\n      // Enregistrer le nom du cours dans les cookies\n      Cookies.set('selectedCourse', this.word);\n      // Rediriger vers la page de section\n      this.$router.push({ name: 'courseSection' });\n    },\n\n    isProfessorRole() {\n      const role = Cookies.get('role');\n      return role === 'professeur';\n    },\n    showDeleteConfirmation() {\n      Swal.fire({\n        title: 'Êtes-vous sûr de vouloir supprimer ce cours ?',\n        text: \"Cette action est irréversible.\",\n        icon: 'warning',\n        showCancelButton: true,\n        confirmButtonColor: '#3085d6',\n        cancelButtonColor: '#d33',\n        confirmButtonText: 'Oui, supprimer',\n        cancelButtonText: 'Annuler'\n      }).then((result) => {\n        if (result.isConfirmed) {\n          this.deleteCourse();\n        }\n      });\n    },\n    deleteCourse() {\n      if (this.isProfessorRole()) {\n        // Récupérer le nom du cours à supprimer\n        const courseName = this.word;\n\n        // Envoyer une requête DELETE à votre backend\n        axios.delete(`http://localhost:1937/teachers/deleteCoursFromProf?coursName=${courseName}`)\n            .then(response => {\n              // Gérer la réponse du backend\n              console.log(response.data);\n              // Mettre à jour la liste des cours en appelant la méthode getCourses\n              this.getCourses(); // Appel de la méthode getCourses passée en prop\n            })\n            .catch(error => {\n              // Gérer les erreurs de requête\n              console.error(error);\n            });\n      } else {\n        // Gérer le cas où l'utilisateur n'a pas les autorisations nécessaires\n        console.log(\"Vous n'êtes pas autorisé à supprimer le cours.\");\n      }\n    },\n    showDetails() {\n      // Émettre un événement pour signaler que le bouton \"Détails\" a été cliqué\n      this.$emit('show-details', this.word);\n    },\n    redirectToDetails() {\n      // Enregistrer le nom du cours dans les cookies\n      Cookies.set('selectedCourse', this.word);\n      // Rediriger vers la page \"DetailsCourse\"\n      this.$router.push({ name: 'DetailsCourse' });\n    }\n  }\n}\n</script>\n\n<style scoped>\n.button {\n  --color: rgb(158, 11, 23);\n  width: 1600px;\n  height: 90px;\n  background-color: rgba(0, 0, 0, 0.2);\n  border-radius: .3em;\n  position: relative;\n  overflow: hidden;\n  cursor: pointer;\n  transition: .5s;\n  font-weight: 400;\n  font-size: 20px;\n  border: 2px solid;\n  font-family: Roboto, sans-serif;\n  text-transform: uppercase;\n  color: var(--color);\n  z-index: 1;\n}\n\n.button::before,\n.button::after {\n  content: '';\n  display: block;\n  width: 60px;\n  height: 60px;\n  transform: translate(-50%, -50%);\n  position: absolute;\n  border-radius: 50%;\n  z-index: -1;\n  background-color: var(--color);\n  transition: 0.8s ease;\n}\n\n.button::before {\n  top: -1em;\n  left: -1em;\n}\n\n.button::after {\n  left: calc(100% + 1em);\n  top: calc(100% + 1em);\n}\n\n.button:hover::before,\n.button:hover::after {\n  height: 1700px;\n  width: 1700px;\n}\n\n.button:hover {\n  color: rgb(236, 181, 181);\n}\n\n.button:active {\n  filter: brightness(.8);\n}\n\n.delete-button {\n  margin-left: 10px;\n  background-color: red;\n  color: white;\n  border: none;\n  padding: 5px 10px;\n  border-radius: 5px;\n  cursor: pointer;\n}\n\n.delete-button:hover {\n  background-color: darkred;\n}\n\n.details-button {\n  margin-left: 10px;\n  background-color: blue;\n  color: white;\n  border: none;\n  padding: 5px 10px;\n  border-radius: 5px;\n  cursor: pointer;\n}\n\n.details-button:hover {\n  background-color: darkblue;\n}\n</style>\n"],"mappings":";AAeA,OAAOA,OAAM,MAAO,WAAW;AAC/B,OAAOC,IAAG,MAAO,aAAa,EAAE;AAChC,OAAOC,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,KAAK,EAAE,CAAC,MAAM,EAAE,YAAY,CAAC;EAC7BC,OAAO,EAAE;IAEPC,iBAAiB,WAAAA,kBAAA,EAAG;MAClB;MACAL,OAAO,CAACM,GAAG,CAAC,gBAAgB,EAAE,IAAI,CAACC,IAAI,CAAC;MACxC;MACA,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC;QAAEC,IAAI,EAAE;MAAgB,CAAC,CAAC;IAC9C,CAAC;IAEDC,eAAe,WAAAA,gBAAA,EAAG;MAChB,IAAMC,IAAG,GAAIZ,OAAO,CAACa,GAAG,CAAC,MAAM,CAAC;MAChC,OAAOD,IAAG,KAAM,YAAY;IAC9B,CAAC;IACDE,sBAAsB,WAAAA,uBAAA,EAAG;MAAA,IAAAC,KAAA;MACvBd,IAAI,CAACe,IAAI,CAAC;QACRC,KAAK,EAAE,+CAA+C;QACtDC,IAAI,EAAE,gCAAgC;QACtCC,IAAI,EAAE,SAAS;QACfC,gBAAgB,EAAE,IAAI;QACtBC,kBAAkB,EAAE,SAAS;QAC7BC,iBAAiB,EAAE,MAAM;QACzBC,iBAAiB,EAAE,gBAAgB;QACnCC,gBAAgB,EAAE;MACpB,CAAC,CAAC,CAACC,IAAI,CAAC,UAACC,MAAM,EAAK;QAClB,IAAIA,MAAM,CAACC,WAAW,EAAE;UACtBZ,KAAI,CAACa,YAAY,CAAC,CAAC;QACrB;MACF,CAAC,CAAC;IACJ,CAAC;IACDA,YAAY,WAAAA,aAAA,EAAG;MAAA,IAAAC,MAAA;MACb,IAAI,IAAI,CAAClB,eAAe,CAAC,CAAC,EAAE;QAC1B;QACA,IAAMmB,UAAS,GAAI,IAAI,CAACvB,IAAI;;QAE5B;QACAL,KAAK,UAAO,iEAAA6B,MAAA,CAAiED,UAAU,CAAE,EACpFL,IAAI,CAAC,UAAAO,QAAO,EAAK;UAChB;UACAC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAACG,IAAI,CAAC;UAC1B;UACAN,MAAI,CAACO,UAAU,CAAC,CAAC,EAAE;QACrB,CAAC,UACK,CAAC,UAAAC,KAAI,EAAK;UACd;UACAJ,OAAO,CAACI,KAAK,CAACA,KAAK,CAAC;QACtB,CAAC,CAAC;MACR,OAAO;QACL;QACAJ,OAAO,CAACC,GAAG,CAAC,gDAAgD,CAAC;MAC/D;IACF,CAAC;IACDI,WAAW,WAAAA,YAAA,EAAG;MACZ;MACA,IAAI,CAACC,KAAK,CAAC,cAAc,EAAE,IAAI,CAAChC,IAAI,CAAC;IACvC,CAAC;IACDiC,iBAAiB,WAAAA,kBAAA,EAAG;MAClB;MACAxC,OAAO,CAACM,GAAG,CAAC,gBAAgB,EAAE,IAAI,CAACC,IAAI,CAAC;MACxC;MACA,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC;QAAEC,IAAI,EAAE;MAAgB,CAAC,CAAC;IAC9C;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}