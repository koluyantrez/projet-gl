{"ast":null,"code":"import \"core-js/modules/es.json.stringify.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nexport default {\n  data: function data() {\n    return {\n      nom: '',\n      prenom: '',\n      matricule: '',\n      idRoom: '',\n      date: '',\n      start: '',\n      end: '',\n      motif: 'evenement'\n    };\n  },\n  methods: {\n    submitForm: function submitForm() {\n      // Vérifier si tous les champs sont remplis\n      if (this.nom === '' || this.prenom === '' || this.matricule === '' || this.idRoom === '' || this.date === '' || this.start === '' || this.end === '' || this.motif === '') {\n        alert(\"Veuillez remplir tous les champs avant d'envoyer la demande.\");\n        return;\n      }\n\n      // Créer un objet avec les données\n      var reservation = {\n        nom: this.nom,\n        prenom: this.prenom,\n        matricule: this.matricule,\n        idRoom: this.idRoom,\n        date: this.date,\n        start: this.start,\n        end: this.end,\n        motif: this.motif\n      };\n\n      // Envoyer les données à votre backend via une requête HTTP POST\n      fetch('http://localhost:1937/addRoomReservationRequest', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(reservation)\n      }).then(function (response) {\n        if (response.ok) {\n          alert(\"Demande envoyée avec succès !\");\n        } else {\n          alert(\"Erreur lors de l'envoi de la demande !\");\n        }\n      })[\"catch\"](function (error) {\n        return console.error('Erreur :', error);\n      });\n    }\n  }\n};","map":{"version":3,"names":["data","nom","prenom","matricule","idRoom","date","start","end","motif","methods","submitForm","alert","reservation","fetch","method","headers","body","JSON","stringify","then","response","ok","error","console"],"sources":["C:\\Users\\trist\\Desktop\\projet-gl-main\\frontend\\src\\components\\extensionOussama\\RoomReservation.vue"],"sourcesContent":["<template>\n  <div>\n    <header>\n      <img src=\"../../assets/illumis.png\" id=\"logoUmons\" style=\"height: 100px; background-color: white;\" >\n    </header>\n\n    <main>\n      <article class=\"container\">\n        <div> -Nom : <input type=\"text\" v-model=\"nom\"> </div>\n        <div> -Prenom : <input type=\"text\" v-model=\"prenom\"> </div>\n        <div> -Votre matricule : <input type=\"number\" v-model=\"matricule\"></div>\n        <div> -Id de salle souhaitée : <input type=\"number\" v-model=\"idRoom\"></div>\n        <div> -Date de réservation : <input type=\"date\" v-model=\"date\"></div>\n        <div> -Heure de début : <input type=\"time\" v-model=\"start\"></div>\n        <div> -Heure de fin : <input type=\"time\" v-model=\"end\"></div>\n        <div> -Motif de la demande  :\n          <select v-model=\"motif\">\n            <option value=\"evenement\">EVENEMENT</option>\n            <option value=\"cours\">COURS</option>\n            <option value=\"seminaire\">SEMINAIRE</option>\n            <option value=\"remediation\">Remediation</option>\n          </select>\n        </div>\n        <button type=\"submit\" id=\"buttonEnvoyer\" @click=\"submitForm\"> Envoyer</button>\n      </article>\n    </main>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      nom: '',\n      prenom: '',\n      matricule: '',\n      idRoom: '',\n      date: '',\n      start: '',\n      end: '',\n      motif: 'evenement'\n    };\n  },\n  methods: {\n    submitForm() {\n      // Vérifier si tous les champs sont remplis\n      if (this.nom === '' || this.prenom === '' || this.matricule === '' || this.idRoom === '' || this.date === '' || this.start === '' || this.end === '' || this.motif === '') {\n        alert(\"Veuillez remplir tous les champs avant d'envoyer la demande.\");\n        return;\n      }\n\n      // Créer un objet avec les données\n      const reservation = {\n        nom: this.nom,\n        prenom: this.prenom,\n        matricule: this.matricule,\n        idRoom: this.idRoom,\n        date: this.date,\n        start: this.start,\n        end: this.end,\n        motif: this.motif\n      };\n\n      // Envoyer les données à votre backend via une requête HTTP POST\n      fetch('http://localhost:1937/addRoomReservationRequest', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(reservation)\n      })\n          .then(response => {\n            if (response.ok) {\n              alert(\"Demande envoyée avec succès !\");\n            } else {\n              alert(\"Erreur lors de l'envoi de la demande !\");\n            }\n          })\n          .catch(error => console.error('Erreur :', error));\n    }\n  }\n};\n</script>\n\n<style>\n* {\n  padding: 0%;\n  margin: 0%;\n}\n\nheader {\n  background-color: rgba(187, 33, 33, 0.877);\n  width: 100%;\n  height: 100px;\n}\n\ndiv {\n  padding: 10px;\n  font-style: italic;\n  font-weight: 300px;\n  font-size: 20px;\n}\n\ndiv input {\n  width: 200px;\n  border-radius: 10px;\n  height: 20px;\n  text-align: center;\n  box-shadow: 5px 4px 5px rgba(0, 0, 0, 0.5);\n  border: 2px solid black;\n  display: flex;\n  flex-direction: column;\n  margin-top: 5px;\n  transform: translateX(130px);\n}\n\n.container {\n  transform: translateX(700px);\n  padding: 50px;\n  border: 2px solid black;\n  width: 500px;\n  text-align: center;\n  margin-top: 100px;\n  box-shadow: 15px 4px 10px rgba(19, 18, 18, 0.5);\n}\n\n#buttonEnvoyer {\n  background-color: white;\n  height: 30px;\n  width: 100px;\n  border-radius: 10px;\n  text-align: center;\n  font-style: italic;\n  box-shadow: 5px 4px 5px rgba(0, 0, 0, 0.5);\n}\n\n#buttonEnvoyer:hover {\n  background-color: brown;\n  color: white;\n}\n\nbody {\n  background-image: url(\"../../assets/bgHome.png\");\n  background-size: cover; /* Pour couvrir tout l'arrière-plan */\n  background-position: center; /* Pour centrer l'image */\n  background-repeat: no-repeat; /* Pour éviter la répétition de l'image */\n}\n\nmain article {\n  background-color: rgb(255, 255, 255);\n}\n</style>\n"],"mappings":";;AA8BA,eAAe;EACbA,IAAI,WAAAA,KAAA,EAAG;IACL,OAAO;MACLC,GAAG,EAAE,EAAE;MACPC,MAAM,EAAE,EAAE;MACVC,SAAS,EAAE,EAAE;MACbC,MAAM,EAAE,EAAE;MACVC,IAAI,EAAE,EAAE;MACRC,KAAK,EAAE,EAAE;MACTC,GAAG,EAAE,EAAE;MACPC,KAAK,EAAE;IACT,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,UAAU,WAAAA,WAAA,EAAG;MACX;MACA,IAAI,IAAI,CAACT,GAAE,KAAM,EAAC,IAAK,IAAI,CAACC,MAAK,KAAM,EAAC,IAAK,IAAI,CAACC,SAAQ,KAAM,EAAC,IAAK,IAAI,CAACC,MAAK,KAAM,EAAC,IAAK,IAAI,CAACC,IAAG,KAAM,EAAC,IAAK,IAAI,CAACC,KAAI,KAAM,EAAC,IAAK,IAAI,CAACC,GAAE,KAAM,EAAC,IAAK,IAAI,CAACC,KAAI,KAAM,EAAE,EAAE;QACzKG,KAAK,CAAC,8DAA8D,CAAC;QACrE;MACF;;MAEA;MACA,IAAMC,WAAU,GAAI;QAClBX,GAAG,EAAE,IAAI,CAACA,GAAG;QACbC,MAAM,EAAE,IAAI,CAACA,MAAM;QACnBC,SAAS,EAAE,IAAI,CAACA,SAAS;QACzBC,MAAM,EAAE,IAAI,CAACA,MAAM;QACnBC,IAAI,EAAE,IAAI,CAACA,IAAI;QACfC,KAAK,EAAE,IAAI,CAACA,KAAK;QACjBC,GAAG,EAAE,IAAI,CAACA,GAAG;QACbC,KAAK,EAAE,IAAI,CAACA;MACd,CAAC;;MAED;MACAK,KAAK,CAAC,iDAAiD,EAAE;QACvDC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACN,WAAW;MAClC,CAAC,EACIO,IAAI,CAAC,UAAAC,QAAO,EAAK;QAChB,IAAIA,QAAQ,CAACC,EAAE,EAAE;UACfV,KAAK,CAAC,+BAA+B,CAAC;QACxC,OAAO;UACLA,KAAK,CAAC,wCAAwC,CAAC;QACjD;MACF,CAAC,UACK,CAAC,UAAAW,KAAI;QAAA,OAAKC,OAAO,CAACD,KAAK,CAAC,UAAU,EAAEA,KAAK,CAAC;MAAA,EAAC;IACvD;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}